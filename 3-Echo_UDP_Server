package p1;
import java.io.*;
import java.net.*;
public class UDPServer {
 public static void main(String[] args) throws Exception 
{
 DatagramSocket serverSocket = new DatagramSocket(9876);
 byte[] receiveBuffer = new byte[1024];
 System.out.println("Server is running...");
 while (true) 
{
 DatagramPacket receivePacket = new DatagramPacket(receiveBuffer, receiveBuffer.length);
 serverSocket.receive(receivePacket);
 String receivedMessage = new String(receivePacket.getData(), 0, receivePacket.getLength());
 System.out.println("Received from client: " + receivedMessage);
 InetAddress clientAddress = receivePacket.getAddress();
 int clientPort = receivePacket.getPort();
 String serverMessage = "Echo: " + receivedMessage;
 byte[] sendBuffer = serverMessage.getBytes();
 DatagramPacket sendPacket = new DatagramPacket(sendBuffer, sendBuffer.length, 
clientAddress, clientPort);
 serverSocket.send(sendPacket);
 System.out.println("Sent to client: " + serverMessage);
 }
 }
}
---------------------------------
	package p1;
	import java.io.*;
	import java.net.*;
	import java.util.*;
	public class UDPClient {
	 public static void main(String[] args) throws Exception {
	 DatagramSocket clientSocket = new DatagramSocket();
	 InetAddress serverAddress = InetAddress.getByName("localhost");
	 byte[] sendBuffer;
	 byte[] receiveBuffer = new byte[1024];
	 Scanner scanner = new Scanner(System.in);
	 System.out.println("Enter a message to send to the server:");
	 String message = scanner.nextLine();
	 sendBuffer = message.getBytes();
	 DatagramPacket sendPacket = new DatagramPacket(sendBuffer, sendBuffer.length, 
	serverAddress, 9876);
	 clientSocket.send(sendPacket);
	 System.out.println("Sent to server: " + message);
	 DatagramPacket receivePacket = new DatagramPacket(receiveBuffer, receiveBuffer.length);
	 clientSocket.receive(receivePacket);
	 String serverMessage = new String(receivePacket.getData(), 0, receivePacket.getLength());
	 System.out.println("Received from server: " + serverMessage);
	 clientSocket.close();
	 scanner.close();
	 }
	}
